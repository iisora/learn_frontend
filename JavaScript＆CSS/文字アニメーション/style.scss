// 先頭に_が入った名前のscssファイルはcssに自動的に読み込まれない
@import 'mixin';

body {
    margin: 0;
}

html {
    font-family: 'Oswald', sans-serif;
    font-family: 'Roboto', sans-serif;
}

#container {
    position: relative;
    /* ビューポートのサイズを基準とした単位 */
    /* ビューポート：ブラウザウインドウの広さ */
    height: 100vh;
    background-color: teal;
}

.animate-title {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    opacity: 0;
    /* 適応される前の大きさを1emとしたところの相対的な大きさなので2倍 */
    font-size: 2em;

    &.inview {
        opacity: 1;

        /* 上から少しずつフェードインしてくる感じにする */
        & .char { /* 半角スペース空いてたら小要素の指定ということになる */
            /* これがないとtransformが働かない */
            /*  transformが働くのはinline要素以外なので(spanタグはinlineなのでダメ) */
            display: inline-block;    

            @include animation(
                $name: kf-animate-chars,
                $duration: 0.5s,
                $timing-function: cubic-bezier(0.39, 1.57, 0.58, 1),
                /* アニメーションの状態を維持する */
                $fill-mode: both
            );

            @for $i from 1 through 9 {
                /* 1文字ずつアニメーションする */
                &:nth-child(#{$i}) {
                    animation-delay: $i * 0.04s;
                }
            }
        }
    }
}

@keyframes kf-animate-chars {
    from {
        /* 初期状態では透明で、上に50%ずれた状態になっている */
        opacity: 0;
        transform: translateY(-50%);
    }

    to {
        opacity: 1;
        /* 上にずれていたのが元の位置に戻るので上から降りてくるように見える */
        transform: translateY(0);
    }
}